[{"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\index.js":"1","C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\App.js":"2","C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\LoginScreen.js":"3","C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\components\\Header.jsx":"4","C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\DailyScreen.js":"5","C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\HomeScreen.js":"6","C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\AddScreen.js":"7"},{"size":229,"mtime":1654678771041,"results":"8","hashOfConfig":"9"},{"size":718,"mtime":1654685864959,"results":"10","hashOfConfig":"9"},{"size":1390,"mtime":1654605285972,"results":"11","hashOfConfig":"9"},{"size":1127,"mtime":1653822466261,"results":"12","hashOfConfig":"9"},{"size":1720,"mtime":1654685502178,"results":"13","hashOfConfig":"9"},{"size":2351,"mtime":1654686130751,"results":"14","hashOfConfig":"9"},{"size":2963,"mtime":1654689827335,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1my871l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\index.js",[],["34","35"],"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\App.js",[],"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\LoginScreen.js",[],"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\components\\Header.jsx",[],["36","37"],"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\DailyScreen.js",[],"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\HomeScreen.js",[],["38","39"],"C:\\Users\\Pro1\\Desktop\\Mailing_System\\src\\pages\\AddScreen.js",["40"],"import React, { useState } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { Form } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Viewer } from '@react-pdf-viewer/core'\r\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout'\r\nimport '@react-pdf-viewer/core/lib/styles/index.css'\r\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css'\r\nimport { Worker } from '@react-pdf-viewer/core'\r\n\r\nconst AddScreen = () => {\r\n  let navigate = useNavigate()\r\n  const defaultLayoutPluginInstance = defaultLayoutPlugin()\r\n\r\n  // for onchange event\r\n  const [pdfFile, setPdfFile] = useState(null)\r\n  const [pdfFileError, setPdfFileError] = useState('')\r\n\r\n  // for submit event\r\n  const [viewPdf, setViewPdf] = useState(null)\r\n\r\n  // onchange event\r\n  const fileType = ['application/pdf']\r\n  const handlePdfFileChange = (e) => {\r\n    let selectedFile = e.target.files[0]\r\n    if (selectedFile) {\r\n      if (selectedFile && fileType.includes(selectedFile.type)) {\r\n        let reader = new FileReader()\r\n        reader.readAsDataURL(selectedFile)\r\n        reader.onloadend = (e) => {\r\n          setPdfFile(e.target.result)\r\n          setPdfFileError('')\r\n        }\r\n      } else {\r\n        setPdfFile(null)\r\n        setPdfFileError('Please select valid pdf file')\r\n      }\r\n    } else {\r\n      console.log('select your file')\r\n    }\r\n  }\r\n\r\n  // form submit\r\n  const handlePdfFileSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (pdfFile !== null) {\r\n      setViewPdf(pdfFile)\r\n    } else {\r\n      setViewPdf(null)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Button color='danger' onClick={() => navigate('/home')}>\r\n        رجوع\r\n      </Button>\r\n      <h1 className='text-center my-5'> إضافة مكاتبة</h1>\r\n      <div className='container'>\r\n        <br></br>\r\n\r\n        <form className='form-group' onSubmit={handlePdfFileSubmit}>\r\n          <input\r\n            type='file'\r\n            className='form-control'\r\n            required\r\n            onChange={handlePdfFileChange}\r\n          />\r\n          {pdfFileError && <div className='error-msg'>{pdfFileError}</div>}\r\n          <br></br>\r\n          <button type='submit' className='btn btn-success btn-lg'>\r\n            UPLOAD\r\n          </button>\r\n        </form>\r\n        <br></br>\r\n        <h4>View PDF</h4>\r\n        <div className='pdf-container'>\r\n          {/* show pdf conditionally (if we have one)  */}\r\n          {viewPdf && (\r\n            <>\r\n              <Worker workerUrl='https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js'>\r\n                <Viewer\r\n                  fileUrl={viewPdf}\r\n                  plugins={[defaultLayoutPluginInstance]}\r\n                />\r\n              </Worker>\r\n            </>\r\n          )}\r\n\r\n          {/* if we dont have pdf or viewPdf state is null */}\r\n          {!viewPdf && <>No pdf file selected</>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddScreen\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"41","replacedBy":"47"},{"ruleId":"43","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],["53"],["54"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]